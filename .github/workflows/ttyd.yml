name: Persistent 12-Hour ttyd VM

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  start-vm:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Restore Previous Files (from backup branch)
      run: |
        mkdir -p restore
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git clone --depth 1 --single-branch --branch backup https://github.com/${{ github.repository }} restore || echo "No backup branch"
        cp -r restore/data/* ~ 2>/dev/null || echo "Nothing to restore"

    - name: Install ttyd and Cloudflare Tunnel
      run: |
        sudo apt update
        sudo apt install -y wget unzip

        # Install ttyd
        wget https://github.com/tsl0922/ttyd/releases/latest/download/ttyd.x86_64 -O ttyd
        chmod +x ttyd
        sudo mv ttyd /usr/local/bin/

        # Install cloudflared
        wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O cloudflared
        chmod +x cloudflared
        sudo mv cloudflared /usr/local/bin/

    - name: Start ttyd with pseudo-TTY and Cloudflare Tunnel
      run: |
        nohup ttyd -p 7681 script -q -c bash /dev/null > ttyd.log 2>&1 &
        sleep 5
        nohup cloudflared tunnel --url http://localhost:7681 --no-autoupdate > cf.log 2>&1 &
        sleep 10
        echo "üåê ttyd link:"
        grep -o 'https://[^ ]*trycloudflare.com' cf.log || cat cf.log

    - name: Save Home Directory to backup branch
      if: always()
      run: |
        mkdir -p save/data
        cp -r ~/* save/data/ || echo "Nothing to save"
        cd save
        git init
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git remote add origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git checkout -b backup
        git add .
        git commit -m "Auto backup $(date)"
        git push -f origin backup
